import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../../../core/constants/app_sizes.dart';
import '../../../core/constants/app_text_styles.dart';
import '../../../widgets/custom_text_field.dart';
import '../../../core/constants/app_colors.dart'; // Added import for AppColors

class AddProductVariantPage extends ConsumerStatefulWidget {
  const AddProductVariantPage({super.key});

  @override
  ConsumerState<AddProductVariantPage> createState() =>
      _AddProductVariantPageState();
}

class _AddProductVariantPageState extends ConsumerState<AddProductVariantPage> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _sizeController = TextEditingController();
  final TextEditingController _hsnCodeController = TextEditingController();
  final TextEditingController _unitsController = TextEditingController();
  final TextEditingController _taxRateController = TextEditingController();

  void _saveVariant() {
    if (_formKey.currentState!.validate()) {
      // TODO: Implement save variant logic
      ScaffoldMessenger.of(
        context,
      ).showSnackBar(const SnackBar(content: Text('Saving Variant...')));
    }
  }

  @override
  void dispose() {
    _sizeController.dispose();
    _hsnCodeController.dispose();
    _unitsController.dispose();
    _taxRateController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        toolbarHeight: 120, // Adjusted height
        titleSpacing: 0, // Removed default title spacing
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          onPressed: () => Navigator.of(context).pop(),
        ),
        title: Padding(
          padding: const EdgeInsets.only(
            left: AppSizes.md,
            top: AppSizes.md,
            bottom: AppSizes.sm,
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Breadcrumbs
              Row(
                children: [
                  Icon(
                    Icons.home,
                    size: AppSizes.iconSm,
                    color: AppColors.textTertiary,
                  ),
                  const SizedBox(width: AppSizes.xs),
                  Text(
                    'Dashboard',
                    style: AppTextStyles.bodySmall.copyWith(
                      color: AppColors.textSecondary,
                    ),
                  ),
                  const Icon(
                    Icons.arrow_forward_ios,
                    size: AppSizes.iconXs,
                    color: AppColors.textTertiary,
                  ),
                  Text(
                    'Products & Variants',
                    style: AppTextStyles.bodySmall.copyWith(
                      color: AppColors.textSecondary,
                    ),
                  ),
                  const Icon(
                    Icons.arrow_forward_ios,
                    size: AppSizes.iconXs,
                    color: AppColors.textTertiary,
                  ),
                  Text(
                    'Add New Variant',
                    style: AppTextStyles.bodySmall.copyWith(
                      color: AppColors.textSecondary,
                    ),
                  ),
                ],
              ),
              const SizedBox(height: AppSizes.sm), // Adjusted spacing
              // Header Title
              Text('Add New Variant', style: AppTextStyles.headlineMedium),
              // Description
              Text(
                'Fill in the details to add a new product variant',
                style: AppTextStyles.bodyMedium.copyWith(
                  color: AppColors.textSecondary,
                ),
              ),
              const SizedBox(height: AppSizes.md),
            ],
          ),
        ),
      ),
      body: Column(
        children: [
          const Divider(
            height: 1,
            thickness: 1,
            color: Colors.grey,
          ), // Horizontal line
          Expanded(
            child: SingleChildScrollView(
              padding: const EdgeInsets.all(AppSizes.md),
              child: Center(
                child: ConstrainedBox(
                  constraints: const BoxConstraints(
                    maxWidth: 800,
                  ), // Fixed width for content
                  child: Form(
                    key: _formKey,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // Variant Image Upload Section
                        Container(
                          padding: const EdgeInsets.all(AppSizes.md),
                          decoration: BoxDecoration(
                            color: AppColors.surface,
                            borderRadius: BorderRadius.circular(
                              AppSizes.cardRadius,
                            ),
                            border: Border.all(color: Colors.grey[300]!),
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceBetween,
                                children: [
                                  Text(
                                    'Variant Image',
                                    style: AppTextStyles.titleMedium,
                                  ),
                                  Container(
                                    padding: const EdgeInsets.symmetric(
                                      horizontal: AppSizes.sm,
                                      vertical: AppSizes.xs,
                                    ),
                                    decoration: BoxDecoration(
                                      color: Colors.blue.withOpacity(0.1),
                                      borderRadius: BorderRadius.circular(
                                        AppSizes.radiusSm,
                                      ),
                                    ),
                                    child: Text(
                                      'Optional',
                                      style: AppTextStyles.bodySmall.copyWith(
                                        color: Colors.blue,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              const SizedBox(height: AppSizes.md),
                              Row(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Container(
                                    width: 150,
                                    height: 150,
                                    decoration: BoxDecoration(
                                      color: Colors.grey[100],
                                      borderRadius: BorderRadius.circular(
                                        AppSizes.cardRadius,
                                      ),
                                      border: Border.all(
                                        color: Colors.blue.withOpacity(0.5),
                                        style: BorderStyle.solid,
                                      ), // Using solid for now, as dashed is not directly supported
                                    ),
                                    child: Column(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      children: [
                                        Icon(
                                          Icons.camera_alt,
                                          size: 48,
                                          color: Colors.blue,
                                        ),
                                        const SizedBox(height: AppSizes.sm),
                                        Text(
                                          'Upload Variant Image',
                                          style: AppTextStyles.bodyMedium
                                              .copyWith(color: Colors.blue),
                                        ),
                                        Text(
                                          'JPG, PNG up to 2MB',
                                          style: AppTextStyles.bodySmall
                                              .copyWith(
                                                color: Colors.grey[600],
                                              ),
                                        ),
                                      ],
                                    ),
                                  ),
                                  const SizedBox(width: AppSizes.md),
                                  Expanded(
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: [
                                        Row(
                                          children: [
                                            Icon(
                                              Icons.info_outline,
                                              size: AppSizes.iconSm,
                                              color: Colors.grey[600],
                                            ),
                                            const SizedBox(width: AppSizes.xs),
                                            Text(
                                              'Recommended size: 400x400px',
                                              style: AppTextStyles.bodySmall
                                                  .copyWith(
                                                    color: Colors.grey[600],
                                                  ),
                                            ),
                                          ],
                                        ),
                                        const SizedBox(height: AppSizes.xs),
                                        Row(
                                          children: [
                                            Icon(
                                              Icons.info_outline,
                                              size: AppSizes.iconSm,
                                              color: Colors.grey[600],
                                            ),
                                            const SizedBox(width: AppSizes.xs),
                                            Text(
                                              'Formats: JPG, PNG',
                                              style: AppTextStyles.bodySmall
                                                  .copyWith(
                                                    color: Colors.grey[600],
                                                  ),
                                            ),
                                          ],
                                        ),
                                        const SizedBox(height: AppSizes.xs),
                                        Row(
                                          children: [
                                            Icon(
                                              Icons.info_outline,
                                              size: AppSizes.iconSm,
                                              color: Colors.grey[600],
                                            ),
                                            const SizedBox(width: AppSizes.xs),
                                            Text(
                                              'Maximum size: 2MB',
                                              style: AppTextStyles.bodySmall
                                                  .copyWith(
                                                    color: Colors.grey[600],
                                                  ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ),
                        const SizedBox(height: AppSizes.md),

                        // Size and HSN Code in a row
                        Row(
                          children: [
                            Expanded(
                              child: CustomTextField(
                                controller: _sizeController,
                                label: 'Size *',
                                hint: 'Select size',
                                // TODO: Implement dropdown for size selection
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'Size is required';
                                  }
                                  return null;
                                },
                              ),
                            ),
                            const SizedBox(width: AppSizes.md),
                            Expanded(
                              child: CustomTextField(
                                controller: _hsnCodeController,
                                label: 'HSN Code *',
                                hint: '11042000',
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'HSN Code is required';
                                  }
                                  return null;
                                },
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(height: AppSizes.md),

                        // Units and Tax Rate in a row
                        Row(
                          children: [
                            Expanded(
                              child: NumericTextField(
                                controller: _unitsController,
                                label: 'Units *',
                                hint: 'Enter quantity',
                                allowDecimal: false,
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'Units is required';
                                  }
                                  if (int.tryParse(value) == null) {
                                    return 'Invalid quantity';
                                  }
                                  return null;
                                },
                              ),
                            ),
                            const SizedBox(width: AppSizes.md),
                            Expanded(
                              child: NumericTextField(
                                controller: _taxRateController,
                                label: 'Tax Rate (%) *',
                                hint: '0.00',
                                allowDecimal: true,
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'Tax Rate is required';
                                  }
                                  if (double.tryParse(value) == null) {
                                    return 'Invalid tax rate';
                                  }
                                  return null;
                                },
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(height: AppSizes.md),
                      ],
                    ),
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
      bottomNavigationBar: Container(
        padding: const EdgeInsets.all(AppSizes.md),
        decoration: BoxDecoration(
          color: Theme.of(
            context,
          ).cardColor, // Use card color for footer background
          boxShadow: [
            BoxShadow(
              color: Colors.grey.withOpacity(0.1),
              spreadRadius: 1,
              blurRadius: 5,
              offset: const Offset(0, -3), // changes position of shadow
            ),
          ],
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.end,
          children: [
            ElevatedButton(
              onPressed: () => Navigator.of(context).pop(),
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.white, // White background for Cancel
                foregroundColor: Theme.of(
                  context,
                ).colorScheme.onSurface, // Text color based on theme
                side: BorderSide(color: Colors.grey[300]!), // Grey border
              ),
              child: const Text('Cancel'),
            ),
            const SizedBox(width: AppSizes.md),
            ElevatedButton(
              onPressed: _saveVariant,
              child: const Text('Save Variant'),
            ),
          ],
        ),
      ),
    );
  }
}
